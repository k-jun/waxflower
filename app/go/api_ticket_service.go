/*
 * WaxFlower
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * API version: 0.1.0
 * Contact: keijun091221@gmail.com
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package openapi

import (
	"context"
	"net/http"
	"errors"
)

// TicketAPIService is a service that implements the logic for the TicketAPIServicer
// This service should implement the business logic for every endpoint for the TicketAPI API.
// Include any external packages or services that will be required by this service.
type TicketAPIService struct {
}

// NewTicketAPIService creates a default api service
func NewTicketAPIService() TicketAPIServicer {
	return &TicketAPIService{}
}

// TicketsPost - 
func (s *TicketAPIService) TicketsPost(ctx context.Context, ticket Ticket) (ImplResponse, error) {
	// TODO - update TicketsPost with the required logic for this service method.
	// Add api_ticket_service.go to the .openapi-generator-ignore to avoid overwriting this service implementation when updating open api generation.

	// TODO: Uncomment the next line to return response Response(200, {}) or use other options such as http.Ok ...
	// return Response(200, nil),nil

	// TODO: Uncomment the next line to return response Response(400, {}) or use other options such as http.Ok ...
	// return Response(400, nil),nil

	return Response(http.StatusNotImplemented, nil), errors.New("TicketsPost method not implemented")
}

// TicketsTicketIdDelete - 
func (s *TicketAPIService) TicketsTicketIdDelete(ctx context.Context, ticketId string) (ImplResponse, error) {
	// TODO - update TicketsTicketIdDelete with the required logic for this service method.
	// Add api_ticket_service.go to the .openapi-generator-ignore to avoid overwriting this service implementation when updating open api generation.

	// TODO: Uncomment the next line to return response Response(200, {}) or use other options such as http.Ok ...
	// return Response(200, nil),nil

	// TODO: Uncomment the next line to return response Response(400, {}) or use other options such as http.Ok ...
	// return Response(400, nil),nil

	return Response(http.StatusNotImplemented, nil), errors.New("TicketsTicketIdDelete method not implemented")
}

// TicketsTicketIdGet - 
func (s *TicketAPIService) TicketsTicketIdGet(ctx context.Context, ticketId string) (ImplResponse, error) {
	// TODO - update TicketsTicketIdGet with the required logic for this service method.
	// Add api_ticket_service.go to the .openapi-generator-ignore to avoid overwriting this service implementation when updating open api generation.

	// TODO: Uncomment the next line to return response Response(200, Ticket{}) or use other options such as http.Ok ...
	// return Response(200, Ticket{}), nil

	// TODO: Uncomment the next line to return response Response(400, {}) or use other options such as http.Ok ...
	// return Response(400, nil),nil

	return Response(http.StatusNotImplemented, nil), errors.New("TicketsTicketIdGet method not implemented")
}

// TicketsTicketIdPut - 
func (s *TicketAPIService) TicketsTicketIdPut(ctx context.Context, ticketId string, ticket Ticket) (ImplResponse, error) {
	// TODO - update TicketsTicketIdPut with the required logic for this service method.
	// Add api_ticket_service.go to the .openapi-generator-ignore to avoid overwriting this service implementation when updating open api generation.

	// TODO: Uncomment the next line to return response Response(200, Ticket{}) or use other options such as http.Ok ...
	// return Response(200, Ticket{}), nil

	// TODO: Uncomment the next line to return response Response(400, {}) or use other options such as http.Ok ...
	// return Response(400, nil),nil

	return Response(http.StatusNotImplemented, nil), errors.New("TicketsTicketIdPut method not implemented")
}
