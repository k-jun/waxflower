openapi: 3.0.3
info:
  contact:
    email: keijun091221@gmail.com
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  title: WaxFlower
  version: 0.1.0
servers:
- url: http://localhost:8080
tags:
- description: Main Contents
  name: main
- description: Everything about ticket
  name: ticket
- description: Everything about user
  name: user
- description: Everything about game
  name: game
- description: Everything about seat
  name: seat
paths:
  /reset:
    get:
      responses:
        "200":
          description: OK
        "500":
          description: Internal Server Error
      tags:
      - main
  /search:
    get:
      parameters:
      - explode: true
        in: query
        name: date
        required: true
        schema:
          example: 1999-07-10
          format: date
          type: string
        style: form
      - explode: true
        in: query
        name: sec
        required: true
        schema:
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Ticket'
                type: array
          description: OK
        "400":
          description: Bad request
      tags:
      - main
  /reserve:
    put:
      requestBody:
        $ref: '#/components/requestBodies/TicketReserve'
      responses:
        "200":
          description: OK
        "400":
          description: Bad request
      tags:
      - main
  /users:
    post:
      requestBody:
        $ref: '#/components/requestBodies/User'
      responses:
        "200":
          description: OK
        "400":
          description: Bad request
      tags:
      - user
  /users/{userId}:
    get:
      parameters:
      - explode: false
        in: path
        name: userId
        required: true
        schema:
          example: e241f57c-0521-3caf-82ac-c1295eb32ac8
          format: uuid
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
          description: OK
        "400":
          description: Bad request
      tags:
      - user
  /games:
    post:
      requestBody:
        $ref: '#/components/requestBodies/Game'
      responses:
        "200":
          description: OK
        "400":
          description: Bad request
      tags:
      - game
  /games/{gameId}:
    get:
      parameters:
      - explode: false
        in: path
        name: gameId
        required: true
        schema:
          example: 94518720-e444-4b18-b6f7-034d8af654a5
          format: uuid
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Game'
          description: OK
        "400":
          description: Bad request
      tags:
      - game
  /seats:
    post:
      requestBody:
        $ref: '#/components/requestBodies/Seat'
      responses:
        "200":
          description: OK
        "400":
          description: Bad request
      tags:
      - seat
  /seats/{seatId}:
    get:
      parameters:
      - explode: false
        in: path
        name: seatId
        required: true
        schema:
          example: db10fba1-c46e-4712-a8c7-cc0991df54f4
          format: uuid
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Seat'
          description: OK
        "400":
          description: Bad request
      tags:
      - seat
  /tickets:
    post:
      requestBody:
        $ref: '#/components/requestBodies/Ticket'
      responses:
        "200":
          description: OK
        "400":
          description: Bad request
      tags:
      - ticket
  /tickets/{ticketId}:
    get:
      parameters:
      - explode: false
        in: path
        name: ticketId
        required: true
        schema:
          example: a79b47aa-301b-3221-a323-5e63601b9615
          format: uuid
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Ticket'
          description: OK
        "400":
          description: Bad request
      tags:
      - ticket
components:
  requestBodies:
    User:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/User'
      required: true
    Game:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Game'
      required: true
    Seat:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Seat'
      required: true
    Ticket:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Ticket'
      required: true
    TicketReserve:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/TicketReserve'
      required: true
  responses:
    "200User":
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/User'
      description: OK
    "200Game":
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Game'
      description: OK
    "200Seat":
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Seat'
      description: OK
    "200Ticket":
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Ticket'
      description: OK
    "200Tickets":
      content:
        application/json:
          schema:
            items:
              $ref: '#/components/schemas/Ticket'
            type: array
      description: OK
    "200":
      description: OK
    "400":
      description: Bad request
    "404":
      description: Not Found
    "500":
      description: Internal Server Error
  schemas:
    User:
      example:
        id: e241f57c-0521-3caf-82ac-c1295eb32ac8
        email: brandonnichols@example.net
      properties:
        id:
          example: e241f57c-0521-3caf-82ac-c1295eb32ac8
          format: uuid
          type: string
        email:
          example: brandonnichols@example.net
          format: email
          type: string
      required:
      - email
      - id
      type: object
    Game:
      example:
        date: 1999-07-10T00:00:00.000+00:00
        id: 94518720-e444-4b18-b6f7-034d8af654a5
        time: "49500"
      properties:
        id:
          example: 94518720-e444-4b18-b6f7-034d8af654a5
          format: uuid
          type: string
        date:
          example: 1999-07-10
          format: date
          type: string
        time:
          example: "49500"
          format: time
          type: string
      required:
      - date
      - id
      - time
      type: object
    Seat:
      example:
        sec: 7
        col: 57
        id: db10fba1-c46e-4712-a8c7-cc0991df54f4
        row: AZ
      properties:
        id:
          example: db10fba1-c46e-4712-a8c7-cc0991df54f4
          format: uuid
          type: string
        sec:
          example: 7
          maximum: 9
          minimum: 1
          type: integer
        col:
          example: 57
          maximum: 99
          minimum: 1
          type: integer
        row:
          example: AZ
          pattern: "^[A-Z][A-Z]$"
          type: string
      required:
      - col
      - id
      - row
      - sec
      type: object
    Ticket:
      example:
        seat:
          sec: 7
          col: 57
          id: db10fba1-c46e-4712-a8c7-cc0991df54f4
          row: AZ
        game:
          date: 1999-07-10T00:00:00.000+00:00
          id: 94518720-e444-4b18-b6f7-034d8af654a5
          time: "49500"
        price: 5000
        id: a79b47aa-301b-3221-a323-5e63601b9615
      properties:
        id:
          example: a79b47aa-301b-3221-a323-5e63601b9615
          format: uuid
          type: string
        price:
          example: 5000
          format: int64
          type: integer
        game:
          $ref: '#/components/schemas/Game'
        seat:
          $ref: '#/components/schemas/Seat'
      required:
      - game
      - id
      - price
      - seat
      type: object
    TicketReserve:
      example:
        userId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        ticketId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
      properties:
        userId:
          format: uuid
          type: string
        ticketId:
          format: uuid
          type: string
      required:
      - ticketId
      - userId
      type: object
