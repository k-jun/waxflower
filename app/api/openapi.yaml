openapi: 3.0.3
info:
  contact:
    email: keijun091221@gmail.com
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  title: WaxFlower
  version: 0.1.0
servers:
- url: /
tags:
- description: What is essential is usually invisible to the eye
  name: main
- description: Everything about ticket
  name: ticket
- description: Everything about user
  name: user
- description: Everything about game
  name: game
- description: Everything about seat
  name: seat
paths:
  /users:
    post:
      requestBody:
        $ref: '#/components/requestBodies/User'
      responses:
        "200":
          description: OK
        "400":
          description: Bad request
      tags:
      - user
  /users/{userId}:
    delete:
      parameters:
      - explode: false
        in: path
        name: userId
        required: true
        schema:
          example: 77ec276c-7301-46c1-bcbe-e6d31ef5acc6
          format: uuid
          type: string
        style: simple
      responses:
        "200":
          description: OK
        "400":
          description: Bad request
      tags:
      - user
    get:
      parameters:
      - explode: false
        in: path
        name: userId
        required: true
        schema:
          example: 17737082-837e-49f4-a627-87d7a1594b60
          format: uuid
          type: string
        style: simple
      responses:
        "200":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/User'
          description: OK
        "400":
          description: Bad request
      tags:
      - user
    put:
      parameters:
      - explode: false
        in: path
        name: userId
        required: true
        schema:
          example: c9dfaa6d-c7b9-4ec6-88e4-307222c4d29e
          format: uuid
          type: string
        style: simple
      requestBody:
        $ref: '#/components/requestBodies/User'
      responses:
        "200":
          description: OK
        "400":
          description: Bad request
      tags:
      - user
  /games:
    post:
      requestBody:
        $ref: '#/components/requestBodies/Game'
      responses:
        "200":
          description: OK
        "400":
          description: Bad request
      tags:
      - game
  /games/{gameId}:
    delete:
      parameters:
      - explode: false
        in: path
        name: gameId
        required: true
        schema:
          example: 9e3b2af4-2564-48e9-913c-48e2326e81fa
          format: uuid
          type: string
        style: simple
      responses:
        "200":
          description: OK
        "400":
          description: Bad request
      tags:
      - game
    get:
      parameters:
      - explode: false
        in: path
        name: gameId
        required: true
        schema:
          example: 08384d72-bf72-446e-b74e-1449f707639b
          format: uuid
          type: string
        style: simple
      responses:
        "200":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/Game'
          description: OK
        "400":
          description: Bad request
      tags:
      - game
    put:
      parameters:
      - explode: false
        in: path
        name: gameId
        required: true
        schema:
          example: 08384d72-bf72-446e-b74e-1449f707639b
          format: uuid
          type: string
        style: simple
      requestBody:
        $ref: '#/components/requestBodies/Game'
      responses:
        "200":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/Game'
          description: OK
        "400":
          description: Bad request
      tags:
      - game
  /seats:
    post:
      requestBody:
        $ref: '#/components/requestBodies/Seat'
      responses:
        "200":
          description: OK
        "400":
          description: Bad request
      tags:
      - seat
  /seats/{seatId}:
    delete:
      parameters:
      - explode: false
        in: path
        name: seatId
        required: true
        schema:
          example: 741bae28-7f4a-4b0b-aad7-2323fb61dc58
          format: uuid
          type: string
        style: simple
      responses:
        "200":
          description: OK
        "400":
          description: Bad request
      tags:
      - seat
    get:
      parameters:
      - explode: false
        in: path
        name: seatId
        required: true
        schema:
          example: 2583c890-a814-4ec1-a1f1-1818c530679a
          format: uuid
          type: string
        style: simple
      responses:
        "200":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/Seat'
          description: OK
        "400":
          description: Bad request
      tags:
      - seat
    put:
      parameters:
      - explode: false
        in: path
        name: seatId
        required: true
        schema:
          example: e15805d1-b82d-4942-9046-84a73319d060
          format: uuid
          type: string
        style: simple
      requestBody:
        $ref: '#/components/requestBodies/Seat'
      responses:
        "200":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/Seat'
          description: OK
        "400":
          description: Bad request
      tags:
      - seat
components:
  requestBodies:
    User:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/User'
      required: true
    Game:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Game'
      required: true
    Seat:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Seat'
      required: true
  responses:
    "200User":
      content:
        text/plain:
          schema:
            $ref: '#/components/schemas/User'
      description: OK
    "200Game":
      content:
        text/plain:
          schema:
            $ref: '#/components/schemas/Game'
      description: OK
    "200Seat":
      content:
        text/plain:
          schema:
            $ref: '#/components/schemas/Seat'
      description: OK
    "200":
      description: OK
    "400":
      description: Bad request
    "404":
      description: Not Found
    "500":
      description: Internal Server Error
  schemas:
    User:
      example:
        name: brandonnichols@example.net
        id: e241f57c-0521-3caf-82ac-c1295eb32ac8
      properties:
        id:
          example: e241f57c-0521-3caf-82ac-c1295eb32ac8
          format: uuid
          type: string
        name:
          example: brandonnichols@example.net
          format: email
          type: string
      required:
      - id
      - name
      type: object
    Game:
      example:
        date: 1999-07-10T00:00:00.000+00:00
        id: 94518720-e444-4b18-b6f7-034d8af654a5
        time: "49500"
      properties:
        id:
          example: 94518720-e444-4b18-b6f7-034d8af654a5
          format: uuid
          type: string
        date:
          example: 1999-07-10
          format: date
          type: string
        time:
          example: "49500"
          format: time
          type: string
      required:
      - date
      - id
      - time
      type: object
    Seat:
      example:
        col: 57
        id: db10fba1-c46e-4712-a8c7-cc0991df54f4
        gate: 7
        row: AZ
      properties:
        id:
          example: db10fba1-c46e-4712-a8c7-cc0991df54f4
          format: uuid
          type: string
        gate:
          example: 7
          maximum: 9
          minimum: 1
          type: integer
        col:
          example: 57
          maximum: 99
          minimum: 1
          type: integer
        row:
          example: AZ
          pattern: "^[A-Z][A-Z]$"
          type: string
      required:
      - col
      - gate
      - id
      - row
      type: object
