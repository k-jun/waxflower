openapi: 3.0.3
info:
  title: WaxFlower
  contact:
    email: keijun091221@gmail.com
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  version: 0.1.0
tags:
  - name: main
    description: What is essential is usually invisible to the eye
  - name: ticket
    description: Everything about ticket
  - name: user
    description: Everything about user
  - name: game
    description: Everything about game
  - name: seat
    description: Everything about seat
paths:
  /ticket:
    post:
      tags:
        - ticket
      requestBody:
        $ref: "#/components/requestBodies/Ticket"
      responses:
        200:
          $ref: "#/components/responses/200"
        400:
          $ref: "#/components/responses/400"
        409:
          $ref: "#/components/responses/409"
  /ticket/{ticketId}:
    get:
      tags:
        - ticket
      parameters:
        - in: path
          name: ticketId
          schema:
            type: string
            format: uuid
            example: 2a024d5f-8dbf-4cf3-937c-0ec3307ba65c
          required: true
      responses:
        200:
          $ref: "#/components/responses/200Ticket"
        404:
          $ref: "#/components/responses/404"
    put:
      tags:
        - ticket
      parameters:
        - in: path
          name: ticketId
          schema:
            type: string
            format: uuid
            example: 630fbf83-0439-4105-82d8-6318e48db075
          required: true
      requestBody:
        $ref: '#/components/requestBodies/Ticket'
      responses:
        200:
          $ref: "#/components/responses/200"
        400:
          $ref: "#/components/responses/400"
        404:
          $ref: "#/components/responses/404"
    delete:
      tags:
        - ticket
      parameters:
        - in: path
          name: ticketId
          schema:
            type: string
            format: uuid
            example: 871edb90-6fc6-460d-bd8c-7266539e35bf
          required: true
      responses:
        200:
          $ref: "#/components/responses/200"
        400:
          $ref: "#/components/responses/400"
        404:
          $ref: "#/components/responses/404"
  /user:
    post:
      tags:
        - user
      requestBody:
        $ref: "#/components/requestBodies/User"
      responses:
        200:
          $ref: "#/components/responses/200"
        400:
          $ref: "#/components/responses/400"
        404:
          $ref: "#/components/responses/409"
  /user/{userId}:
    get:
      tags:
        - user
      parameters:
        - in: path
          name: userId
          schema:
            type: string
            format: uuid
            example: 17737082-837e-49f4-a627-87d7a1594b60
          required: true
      responses:
        200:
          $ref: "#/components/responses/200User"
        400:
          $ref: "#/components/responses/400"
        404:
          $ref: "#/components/responses/404"
    put:
      tags:
        - user
      parameters:
        - in: path
          name: userId
          schema:
            type: string
            format: uuid
            example: c9dfaa6d-c7b9-4ec6-88e4-307222c4d29e
          required: true
      requestBody:
        $ref: "#/components/requestBodies/User"
      responses:
        200:
          $ref: "#/components/responses/200"
        400:
          $ref: "#/components/responses/400"
  /game:
    post:
      tags:
        - game
      requestBody:
        $ref: "#/components/requestBodies/Game"
      responses:
        200:
          $ref: "#/components/responses/200"
        400:
          $ref: "#/components/responses/400"
        404:
          $ref: "#/components/responses/409"
  /game/{gameId}:
    get:
      tags:
        - game
      parameters:
        - in: path
          name: gameId
          schema:
            type: string
            format: uuid
            example: 99c9ec79-042c-4885-81bc-1b4f5eb53d0f
          required: true
      responses:
        200:
          $ref: "#/components/responses/200Game"
        400:
          $ref: "#/components/responses/400"
        404:
          $ref: "#/components/responses/404"
    put:
      tags:
        - game
      parameters:
        - in: path
          name: gameId
          schema:
            type: string
            format: uuid
            example: 99c9ec79-042c-4885-81bc-1b4f5eb53d0f
          required: true
      requestBody:
        $ref: "#/components/requestBodies/Game"
      responses:
        200:
          $ref: "#/components/responses/200Game"
        400:
          $ref: "#/components/responses/400"
        404:
          $ref: "#/components/responses/404"
  /seat:
    post:
      tags:
        - seat
      requestBody:
        $ref: "#/components/requestBodies/Seat"
      responses:
        200:
          $ref: "#/components/responses/200"
        400:
          $ref: "#/components/responses/400"
        409:
          $ref: "#/components/responses/409"
  /seat/{seatId}:
    get:
      tags:
        - seat
      parameters:
        - in: path
          name: seatId
          schema:
            type: string
            format: uuid
            example: 34f90bdc-2210-4b18-b1d2-3d11499cde9b
          required: true
      responses:
        200:
          $ref: "#/components/responses/200Seat"
        400:
          $ref: "#/components/responses/400"
        404:
          $ref: "#/components/responses/404"
    put:
      tags:
        - seat
      parameters:
        - in: path
          name: seatId
          schema:
            type: string
            format: uuid
            example: 96ce32d7-d251-422a-9bb4-8b8b14fe71da
          required: true
      requestBody:
        $ref: "#/components/requestBodies/Seat"
      responses:
        200:
          $ref: "#/components/responses/200"
        400:
          $ref: "#/components/responses/400"
        404:
          $ref: "#/components/responses/404"
components:
  schemas:
    Ticket:
      type: object
      properties:
        id:
          type: string
          format: uuid
          example: a79b47aa-301b-3221-a323-5e63601b9615
        place:
          type: integer
          format: int64
          example: 5000
        user:
          $ref: '#/components/schemas/User'
        game:
          $ref: '#/components/schemas/Game'
        seat:
          $ref: '#/components/schemas/Seat'
    User:
      type: object
      properties:
        id:
          type: string
          format: uuid
          example: e241f57c-0521-3caf-82ac-c1295eb32ac8
        name:
          type: string
          format: email
          example: brandonnichols@example.net
    Game:
      type: object
      properties:
        id:
          type: string
          format: uuid
          example: 94518720-e444-4b18-b6f7-34d8af654a5
        date:
          type: string
          format: date
          example: 1999-07-10
        time:
          type: string
          format: date
          example: 13:45:00
    Seat:
      type: object
      properties:
        id:
          type: string
          format: uuid
          example: db10fba1-c46e-4712-a8c7-cc0991df54f4
        gate:
          type: integer
          example: 9
        col:
          type: integer
          example: 57
        row:
          type: string
          pattern: '^[A-Z][A-Z]$'
          example: A
  requestBodies:
    Ticket:
      required: true
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Ticket'
    User:
      required: true
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/User'
    Game:
      required: true
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Game'
    Seat:
      required: true
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Seat'
  responses:
    200:
      description: OK
    200Ticket:
      description: OK
      content:
        text/plain:
          schema:
            $ref: '#/components/schemas/Ticket'
    200User:
      description: OK
      content:
        text/plain:
          schema:
            $ref: '#/components/schemas/User'
    200Game:
      description: OK
      content:
        text/plain:
          schema:
            $ref: '#/components/schemas/Game'
    200Seat:
      description: OK
      content:
        text/plain:
          schema:
            $ref: '#/components/schemas/Seat'
    400:
      description: Bad request
    404:
      description: Not Found
    409:
      description: Conflict
    500:
      description: Unexpected Error
